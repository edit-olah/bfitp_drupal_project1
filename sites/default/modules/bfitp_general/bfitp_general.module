<?php
/**
 * implement hook_block_info
 */
function bfitp_general_block_info() {
  
  $blocks['dynamic_menu'] = array(
    'info' => t('Dynamic Menu'),
  );
//  $blocks['petes_test_block'] = array(
//      'info' => t('Petes test block'),
//  );

  return $blocks;
}

/**
 * implement hook_block_view
 * $delta name of the block
 */
function bfitp_general_block_view($delta = '') {
  // This example is adapted from node.module.
  $block = array();

  switch ($delta) {
      case 'dynamic_menu':
	$block['content'] = bfitp_general_dynamic_menu();
      break;
//      case 'petes_test_block':
//	  $block['content'] = petes_test_block_function();
//	  break;
  };
  
  return $block;
  
}

function bfitp_general_dynamic_menu(){
//	var_dump(arg(1)); //get me the 2nd argument in the url (/node/5)

    $output = '';
    $output .= '<div id="MainNav"><nav>';
    // load the content of the current page and put it into page_type variable
    $page_type = node_load(arg(1));
    
    
    // if 'type' is equal to 'home_page' or 'index_page' or 'contact_us_page' or 'basic_page' in the loaded content and
    // page is NOT Edit's blog /node/18, Peter's blog /node/19, then
    // print this menu item within the navigation
    if(arg(1) != 18 AND arg(1) != 19 AND $page_type->type === 'home_page' || $page_type->type === 'index_page' || $page_type->type === 'contact_us_page' || $page_type->type === 'basic_page') {
	
	$output .= '<ul class="nav">';
	$output .= '<li><a href="' .  url('<front>') . '">' . t('Home') . '</a></li>';
	$output .= '<li><a class="pageNavLinkHome" href="'. url('<front>').'?section=About-us">' .t('About us') .'</a></li>';
	$output .= '<li><a href="'.$GLOBALS['base_url'].'/portfolio">' .t('Portfolio') .'</a></li>';
	$output .= '<li><a href="'.$GLOBALS['base_url'].'/blog">' .t('Blog') .'</a></li>';
	$output .= '<li><a href="'.$GLOBALS['base_url'].'/contact-us">' .t('Contact us') .'</a></li>';
	$output .= '</ul>';
	
    }


    // if page is either edit-olah-blog /node/18, peter-whyte-blog /node/19, then
    // print this menu item within the navigation                       
    if(arg(1) == 18 || arg(1) == 19) {
	$output .= '<ul class="topNav">';
	$output .= '<li><a href="' .  url('<front>') . '">' . t('Home') . '</a></li>';

	if(arg(1) == 18){
	     $output .= '<li><a href="'.$GLOBALS['base_url'].'/edit-olah">' .t('Edit\'s Portfolio') .'</a></li>';
	     $output .= '<li><a href="'.$GLOBALS['base_url'].'/edit-olah-resume">' .t('Edit\'s Resume') .'</a></li>';
	 }
	 if(arg(1) == 19){
	     $output .= '<li><a href="'.$GLOBALS['base_url'].'/peter-whyte">' .t('Peter\'s Portfolio') .'</a></li>';
	     $output .= '<li><a href="'.$GLOBALS['base_url'].'/peter-whyte-resume">' .t('Peter\'s Resume') .'</a></li>';
	 }                      

	$output .= '</ul>';
	

    }
    
    // if 'type' is 'profile_page' and the page is either edit-olah /node/5, peter-whyte /node/22, then
    // print this menu item within the navigation  
    if($page_type->type === 'profile_page'){
	$output .= '<ul class="topNav">';
	$output .= '<li><a href="' .  url('<front>') . '">' . t('Home') . '</a></li>';
	if(arg(1) == 5){
	     $output .= '<li><a href="'.$GLOBALS['base_url'].'/edit-olah-blog">' .t('Edit\'s Blog') .'</a></li>';
	     $output .= '<li><a href="'.$GLOBALS['base_url'].'/edit-olah-resume">' .t('Edit\'s Resume') .'</a></li>';
	 }
	 if(arg(1) == 22){
	     $output .= '<li><a href="'.$GLOBALS['base_url'].'/peter-whyte-blog">' .t('Peter\'s Blog') .'</a></li>';
	     $output .= '<li><a href="'.$GLOBALS['base_url'].'/peter-whyte-resume">' .t('Peter\'s Resume') .'</a></li>';
	 } 
	$output .= '</ul>';
    }
    
    
    // if 'type' is 'resume_page' and page is either edit-olah-resume /node/8, peter-whyte-resume /node/23, then
    // print this menu item within the navigation  
    if($page_type->type === 'resume_page'){
	$output .= '<ul class="topNav">';
	$output .= '<li><a href="' .  url('<front>') . '">' . t('Home') . '</a></li>';
	if(arg(1) == 8){
	    $output .= '<li><a href="'.$GLOBALS['base_url'].'/edit-olah">' .t('Edit\'s Portfolio') .'</a></li>';
	     $output .= '<li><a href="'.$GLOBALS['base_url'].'/edit-olah-blog">' .t('Edit\'s Blog') .'</a></li>';
	     
	 }
	 if(arg(1) == 23){
	     $output .= '<li><a href="'.$GLOBALS['base_url'].'/peter-whyte">' .t('Peter\'s Portfolio') .'</a></li>';
	     $output .= '<li><a href="'.$GLOBALS['base_url'].'/peter-whyte-blog">' .t('Peter\'s Blog') .'</a></li>';
	 } 
	$output .= '</ul>';
    }  
    
    
    
    // if 'type' is 'blog_article', then
    // print this menu item within the navigation  
     if($page_type->type === 'blog_article'){
	
	$output .= '<ul class="topNav">';
	$output .= '<li><a href="' .  url('<front>') . '">' . t('Home') . '</a></li>';
	// if bfr cookie is set
	if(isset($_COOKIE['bfr'])) {
	    // take the string with bfr cookie's value in it and slice it up at the 
	    // commas and put the slices into an array called cookieValue
	    $cookieValue = explode(',', $_COOKIE['bfr']);
	    // grab the first item in the array and put it into a variable called referrer
	    $referrer = $cookieValue[0];
	    
	    switch ($referrer) {
		case '18': // if referrer's value is equal to 18, print this on the page
		    $output .= '<li>'.l(t('Edit\'s Blog'), 'node/18') .'</li>';
		    break;
		case '19': // if referrer's value is equal to 19, print this on the page
		    $output .= '<li>' .l(t('Peter\'s Blog'), 'node/19') .'</li>';
		    break;
		default: // otherwise, print this on the page
		    $output .= '<li><a href="'.$GLOBALS['base_url'].'/blog">' .t('Blog') .'</a></li>';
		    break;
	    }
	} else { // if cookie is not set, print this on the page
	    $output .= '<li><a href="'.$GLOBALS['base_url'].'/blog">' .t('Blog') .'</a></li>';
	}
	
	$output .= '<li><a href="'.$GLOBALS['base_url'].'/contact-us">' .t('Contact us') .'</a></li>';
	$output .= '</ul>';
     }
    
     
    // if 'type' is 'portfolio_work_detail_page', then
    // print this menu item within the navigation  
     if($page_type->type === 'portfolio_work_detail_page'){
	$output .= '<ul class="topNav">';
	$output .= '<li><a href="' .  url('<front>') . '">' . t('Home') . '</a></li>';
	
		if(isset($_SERVER['HTTP_REFERER'])) { 
	    $referer =  $_SERVER['HTTP_REFERER']; 
	    $refererUrl = explode('/', $referer);
	    $refererLast = end($refererUrl);
	    switch ($refererLast) {
		case 'edit-olah-blog':
		    $output .= '<li><a href="'.$GLOBALS['base_url'].'/'.$refererLast.'">' .t('Edit\'s Portfolio') .'</a></li>';
		    break;
		case 'peter-whyte-blog':
		    $output .= '<li><a href="'.$GLOBALS['base_url'].'/'.$refererLast.'">' .t('Peter\'s Portfolio') .'</a></li>';
		    break;
		default:
		    $output .= '<li><a href="'.$GLOBALS['base_url'].'portfolio">' .t('Portfolio') .'</a></li>';
		    break;
	    }
	}

	$output .= '<li><a href="'.$GLOBALS['base_url'].'/contact-us">' .t('Contact us') .'</a></li>';
	$output .= '</ul>';
     }   
    
    
    $output .= '</nav></div><!-- /#MainNav -->';
    
    $block = array(
	'message' => array(
	  '#type' => 'markup',
	  '#markup' => $output,
	),
      );
      return $block;
}
  

//function petes_test_block_function() {
//    $output = '';
//    $output .= 'This is a test';
//    
//    $block = array(
//	'message' => array(
//	    '#type' => 'markup',
//	    '#markup' => $output,
//	),
//    );
//    return $block;


function portfolio_mixitup($user){
    $mixitupFilter = '';
    $mixitupFilter .= '<div class="control-bar">
			<div class="group">
			    <label>Show:</label>
			    <button class="filter-portfo" data-filter="all">All</button>
			    <button class="filter-portfo" data-filter="none">None</button>
			</div><!--/.group -->
			<div class="group filter-buttons">
			<label>Filter:</label>';
			
    
			// 'SELECT' distinct --- removes duplicates
			// 'AS' gives an alias, you need this with SELECT - probably because you are changing a column name
			// This database query returns all category names for a person that got selected on their individual portfolio work/project pages
    $categories = db_query("SELECT distinct category.entity_id AS cid, category.field_portfolio_work_category_value AS categoryClass
			    FROM node n
			    INNER JOIN field_data_field_created_by user ON n.nid = user.entity_id
			    INNER JOIN field_data_field_portfolio_work_category category ON n.nid = category.entity_id
			    WHERE n.type = 'portfolio_work_detail_page'
			    AND user.field_created_by_target_id = :userid
			    GROUP BY category.field_portfolio_work_category_value;", array(':userid'=>$user))->fetchAll();
    
    $field = field_info_field('field_portfolio_work_category');
    $category_values = list_allowed_values($field);
    $categorybynodeid = array();
    foreach($categories as $category){
	$mixitupFilter .= '<button class="filter-portfo" data-filter=".' . $category->categoryClass . '">'.$category_values[$category->categoryClass].'</button>&nbsp;';
	//$category is an object so this is how you get the values of it
	$categorybynodeid[] = array($category->cid=>$category->categoryClass);
    }
    
    $mixitupFilter .= '</div><!--/.group.filter-buttons -->
		     </div><!--/.control-bar -->';
	    
    $portfolioContainer = '';
    $portfolioContainer .= '<div id="PortfolioContainer" class="mixItUp-container">';
    // 'FROM node n' --- get all of the data from the 'node' table (shorten node to / with alias of 'n')
    // 'INNER JOIN field_data_field_created_by' --- add data from 'field_data_field_created_by' table (shorten / alias 'field_data_field_created_by' to 'user')
    // 'ON' --- match value from one table with the corresponding value from another table
    // 'n.nid' --- 'nid' from 'node' table is the same as 'entity_id' from 'field_data_field_created_by_user' alias 'user' table
    // 'WHERE' --- filter results by content type or 'n.type' is 'portfolio_work_detail_page'
    // 'AND' --- add another filter, the value of 'field_created_by_target_id' from 'field_data_field_created_by_user' alias 'user' table is the value of the variable that we pass into our function (function portfolio_mixitup($user))
    // last row explanation: 'user.field_created_by_target_id = :userid;"' --- ';"' end of MySQL query. So we use a made-up variable instead of the specific value of a nodeid '5', called 'userid', this variable can be anything,
    //    and we put it into an array, where we identify ':userid' with the '$user' variable that we are going to use to pass into our function. 'fetchAll()' is a Drupal command to get all matching data.
    // 'SELECT distinct n.title' --- we are just asking about the title
    // 'SELECT distinct n.title, n.nid, img.field_detail_page_header_image_fid as imgid' --- we are asking about multiple values: node title, node id, 'field_detail_page_header_image_fid' (image field id) from the 'img' table (which is just the table for 'field_data_field_detail_page_header_image' field aliased earlier as 'img') shortened / aliased as 'imgid'.
    $projects = db_query("SELECT distinct n.title, n.nid, img.field_detail_page_header_image_fid as imgid
			    FROM node n
			    INNER JOIN field_data_field_created_by user ON n.nid = user.entity_id
			    INNER JOIN field_data_field_detail_page_header_image img ON n.nid = img.entity_id
			    WHERE n.type = 'portfolio_work_detail_page'
			    AND user.field_created_by_target_id = :userid;", array(':userid'=>$user))->fetchAll();
    
    foreach($projects as $project){
	$imguri = file_load($project->imgid);
	$categoryClassList = '';
	foreach($categorybynodeid as $porfolioWorkPageId){
	    if($porfolioWorkPageId[$project->nid] != null){
		$categoryClassList .= $porfolioWorkPageId[$project->nid] . ' ';
	    }
	};

	$portfolioContainer .= '<div class="portfoMix click-follow '. $categoryClassList .'">
				<section>
				    <img alt="' . $project->title . 
					'" title="' . $project->title . 
					'" src="' . image_style_url('portfolio_header_460x230', $imguri->uri) .'" />
				    <h3>' . $project->title . '</h3>
				    <h4>'.$categoryClassList.'</h4>
				    <p class="button">' . l('More details >>', 'node/' . $project->nid) . '</p>
				</section>
			    </div><!--/.portfoMix -->&nbsp;';
    }

    $portfolioContainer .= '<div class="gap"></div>
			    <div class="gap"></div>
			    </div><!--/#PortfolioContainer -->';
    
   return $mixitupFilter . $portfolioContainer;
   
}